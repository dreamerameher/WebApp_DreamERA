trigger:
- main

pool:
  name: Default  # Your self-hosted agent

variables:
  System.Debug: true
  azureSubscription: 'AzureServiceConnection'
  appName: 'WebApp-DreamERA'
  publishDir: '$(Build.ArtifactStagingDirectory)/published'

stages:

# ----------------------- Build Stage -----------------------
- stage: Build
  displayName: Build Stage
  jobs:
  - job: BuildJob
    displayName: Build
    steps:

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '7.0.x'

    - task: DotNetCoreCLI@2
      displayName: 'Build Project'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration Release'

    - task: DotNetCoreCLI@2
      displayName: 'Run Tests'
      inputs:
        command: 'test'
        projects: '**/*.csproj'
        arguments: '--logger:trx'

    - task: DotNetCoreCLI@2
      displayName: 'Publish App'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
        arguments: '--configuration Release --output $(publishDir)'
        zipAfterPublish: false

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(publishDir)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - task: PowerShell@2
      displayName: "Verify Published Files"
      inputs:
        targetType: 'inline'
        script: |
          Write-Output "Listing contents of published directory:"
          Get-ChildItem -Recurse "$(publishDir)"

# ----------------------- Deploy Stage -----------------------
- stage: Deploy
  displayName: Release Stage
  dependsOn: Build

  jobs:
  - deployment: DeployWebApp
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:

          - download: current
            artifact: drop

          - task: PowerShell@2
            displayName: "Verify Artifact Download"
            inputs:
              targetType: 'inline'
              script: |
                Write-Output "Listing contents after artifact download:"
                Get-ChildItem -Recurse "$(Pipeline.Workspace)/drop"

          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webApp
              appName: $(appName)
              package: $(Pipeline.Workspace)/drop
